Order Transaction

API

POST    /cart/addItem
    req {"customerId":, "productId", "quantity"}
    res
        DuplicateResource
        {
            "customer":
            {
                "id":
                "name":
            },
            "product":
            {
                "id":
                "name":
                "price":
                "stock":
            },
            "quantity":
        }

==========================================================================

POST    /cart/addCoupon
    req {"customerId":, "couponId":}
    res
        InvalidResource
        {
            "customer":
            {
                "id":
                "name":
            },
            "coupon":
            {
                "id":
                "name":
                "start_valid_date":
                "end_valid_date":
                "stock":
                "type":
                "amount":
            }
        }

==========================================================================

GET     /cart/
    req {"customerId":}
    res
        {
            "customer": 
            {
                "id":,
                "name":
            },
            "coupon":
            {
                "id":
                "name":
                "start_valid_date":
                "end_valid_date":
                "stock":
                "type":
                "amount":
            },
            "cart_item": 
            [
                {
                    "id":
                    "name":
                    "price":
                    "stock":
                    "quantity"
                }
            ],
            "subtotal":
            "discount":
            "total":
        }
    notes
        * customer may doesn't have cart

==========================================================================

GET     /order/customer
    req {"customerId"}
    res 
        {
            "customer":
            {
                "id":
                "name": "kamila"
            },
            "orders":
            [
                {
                    "id":
                    "status":
                    "order_date":
                }
            ]
        }

==========================================================================

GET     /order/status
    req {status}
    res 
        IllegalArgument('Status status Not Exist')
        {
            "status": "submitted",
            "orders": 
            [
                {
                  "id":
                  "order_date":
                }
            ]
        }
    notes
        * status = {submitted, shipped, delivered, invalid}
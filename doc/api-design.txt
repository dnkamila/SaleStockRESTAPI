Order Transaction

API

POST    /cart/addItem
    req {"customerId":, "productId", "quantity"}
    res
        DuplicateResource
        {
            "customer":
            {
                "id":
                "name":
            },
            "product":
            {
                "id":
                "name":
                "price":
                "stock":
            },
            "quantity":
        }

==========================================================================

POST    /cart/addCoupon
    req {"customerId":, "couponId":}
    res
        InvalidResource
        {
            "customer":
            {
                "id":
                "name":
            },
            "coupon":
            {
                "id":
                "name":
                "start_valid_date":
                "end_valid_date":
                "stock":
                "type":
                "amount":
            }
        }

==========================================================================

GET     /cart/
    req {"customerId":}
    res
        {
            "customer": 
            {
                "id":,
                "name":
            },
            "coupon":
            {
                "id":
                "name":
                "start_valid_date":
                "end_valid_date":
                "stock":
                "type":
                "amount":
            },
            "cart_item": 
            [
                {
                    "id":
                    "name":
                    "price":
                    "stock":
                    "quantity"
                }
            ],
            "subtotal":
            "discount":
            "total":
        }
    
    notes
        * customer may doesn't have cart

==========================================================================

GET     /order/customer
    req {"customerId"}
    res 
        {
            "customer":
            {
                "id":
                "name": "kamila"
            },
            "orders":
            [
                {
                    "id":
                    "status":
                    "order_date":
                }
            ]
        }

==========================================================================

GET     /order/status
    req {"status"}
    res 
        IllegalArgument
        {
            "status": "submitted",
            "orders": 
            [
                {
                  "id":
                  "order_date":
                }
            ]
        }
    
    notes
        * status = {submitted, shipped, delivered, invalid}

==========================================================================

PUT     /order/status
    req {"orderId", "status"}
    res 
        ResourceNotFound
        IllegalArgument
        {
            "id":
            "status":
            "order_date"
        }
    
    notes
        * status = {shipped, invalid}

==========================================================================

GET     /order
    req {"orderId"}
    res 
        ResourceNotFound
        {
            "order":
            {
                "id":
                "status":
                "order_date":
                "name":
                "phone":
                "email":
                "address":
                "proof":
            },
            "customer":
            {
                "id":
                "name":
            },
            "coupon":
            {
                "id":
                "name":
                "start_valid_date":
                "end_valid_date":
                "stock":
                "type":
                "amount":
            },
            "order_item":
            [
                {
                    "id":
                    "name":
                    "price":
                    "stock":
                    "quantity"
                }
            ],
            "subtotal":
            "discount":
            "total":
        }

==========================================================================

POST    /order
    req {"customerId", "name", "phone", "email", "address"}
    res
        InvalidResource
        {
            "order": {
                "id":
                "status":
                "order_date":
                "name":
                "phone":
                "email":
                "address":
                "proof":
            },
            "customer": {
                "id":
                "name":
            },
            "coupon": {
                "id":
                "name":
                "start_valid_date":
                "end_valid_date":
                "stock":
                "type":
                "amount":
            },
            "order_item": [
                {
                    "id":
                    "name":
                    "price":
                    "stock":
                    "quantity":
                }
            ],
            "subtotal":
            "discount":
            "total":
        }

    notes
        - delete cart and cart_item of customer.id
        * "status" default value "submitted"
        * shipment data can different from username data : name, phone, email, address
        * while reviewing order, product / coupon can be taken by others, so
            - check coupon validity and availability
            - check product availability
            - update(decrease) inventory product and coupon